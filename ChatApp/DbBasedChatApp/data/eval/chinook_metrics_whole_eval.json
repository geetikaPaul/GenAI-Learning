[
  {
    "id": 1,
    "user_input": "How many albums are there?",
    "retrieved_contexts": [
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)"
    ],
    "response": "There are 347 albums in total",
    "reference": "347"
  },
  {
    "id": 2,
    "user_input": "How many distinct genres are there?",
    "retrieved_contexts": [
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)"
    ],
    "response": "SELECT COUNT(DISTINCT Name) FROM Genre",
    "reference": "SELECT COUNT(DISTINCT GenreId) FROM track"
  },
  {
    "id": 3,
    "user_input": "How many tracks are in the 'Rock' genre?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))"
    ],
    "response": "```sql\nSELECT COUNT(T.TrackId) \nFROM Track T \nJOIN Genre G ON T.GenreId = G.GenreId \nWHERE G.Name = 'Rock';\n```",
    "reference": "SELECT COUNT(*) FROM track t JOIN genre g ON t.GenreId = g.GenreId WHERE g.name = 'Rock'"
  },
  {
    "id": 4,
    "user_input": "What is the total number of invoice lines?",
    "retrieved_contexts": [
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "SELECT COUNT(InvoiceLineId) FROM InvoiceLine",
    "reference": "SELECT COUNT(*) FROM InvoiceLine"
  },
  {
    "id": 5,
    "user_input": "How many customers are from the USA?",
    "retrieved_contexts": [
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "SELECT COUNT(CustomerId) FROM Customer WHERE Country = 'USA'",
    "reference": "SELECT COUNT(*) FROM customer WHERE country = 'USA'"
  },
  {
    "id": 6,
    "user_input": "What is the highest employee ID?",
    "retrieved_contexts": [
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "SELECT MAX(EmployeeId) FROM Employee",
    "reference": "SELECT MAX(EmployeeId) FROM employee"
  },
  {
    "id": 7,
    "user_input": "How many tracks have a length greater than 5 minutes (300000 milliseconds)?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "SELECT COUNT(TrackId) FROM Track WHERE Milliseconds > 300000",
    "reference": "SELECT COUNT(*) FROM track WHERE milliseconds > 300000"
  },
  {
    "id": 8,
    "user_input": "What is the total number of bytes for all tracks?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)"
    ],
    "response": "SELECT SUM(Bytes) FROM Track",
    "reference": "SELECT SUM(bytes) FROM track"
  },
  {
    "id": 9,
    "user_input": "How many customers have a company name specified?",
    "retrieved_contexts": [
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)"
    ],
    "response": "```sql\nSELECT COUNT(*) \nFROM Customer \nWHERE Company IS NOT NULL AND Company <> '';\n```",
    "reference": "SELECT COUNT(*) FROM customer WHERE company IS NOT NULL"
  },
  {
    "id": 10,
    "user_input": "How many tracks cost more than $1?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))"
    ],
    "response": "SELECT COUNT(TrackId) FROM Track WHERE UnitPrice > 1.00",
    "reference": "SELECT COUNT(*) FROM track WHERE UnitPrice > 1"
  },
  {
    "id": 11,
    "user_input": "What is the total number of seconds for all tracks?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "SELECT SUM(Milliseconds / 1000) FROM Track",
    "reference": "SELECT ROUND(SUM(milliseconds) / 1000) FROM track"
  },
  {
    "id": 12,
    "user_input": "How many invoices were created in 2021?",
    "retrieved_contexts": [
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "SELECT COUNT(InvoiceId) FROM Invoice WHERE InvoiceDate BETWEEN '2021-01-01' AND '2021-12-31'",
    "reference": "SELECT COUNT(*) FROM invoice WHERE strftime('%Y', InvoiceDate)  = '2021'"
  },
  {
    "id": 13,
    "user_input": "What is the number of customers who have made purchases totaling over $40?",
    "retrieved_contexts": [
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "```sql\nSELECT COUNT(DISTINCT CustomerId) \nFROM Invoice \nWHERE Total > 40;\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT CustomerId FROM invoice GROUP BY CustomerId HAVING SUM(total) > 40)"
  },
  {
    "id": 14,
    "user_input": "How many artists have more than 10 albums?",
    "retrieved_contexts": [
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)"
    ],
    "response": "```sql\nSELECT COUNT(ArtistId) \nFROM (\n  SELECT ArtistId \n  FROM Album \n  GROUP BY ArtistId \n  HAVING COUNT(AlbumId) > 10\n) AS subquery\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT ArtistId FROM album GROUP BY ArtistId HAVING COUNT(*) > 10)"
  },
  {
    "id": 15,
    "user_input": "What is the total number of tracks in playlists that have 'Rock' in their name?",
    "retrieved_contexts": [
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)"
    ],
    "response": "```sql\nSELECT COUNT(pt.TrackId) \nFROM PlaylistTrack pt \nJOIN Playlist p ON pt.PlaylistId = p.PlaylistId \nJOIN Track t ON pt.TrackId = t.TrackId \nJOIN Genre g ON t.GenreId = g.GenreId \nWHERE p.Name LIKE '%Rock%' AND g.Name = 'Rock';\n```",
    "reference": "SELECT COUNT(DISTINCT pt.TrackId) FROM PlaylistTrack pt JOIN playlist p ON pt.PlaylistId = p.PlaylistId WHERE p.name LIKE '%Rock%'"
  },
  {
    "id": 16,
    "user_input": "How many customers have made purchases in all years the store has been operating?",
    "retrieved_contexts": [
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "```sql\nSELECT COUNT(DISTINCT CustomerId) \nFROM Invoice\nWHERE InvoiceDate IS NOT NULL\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT CustomerId FROM invoice GROUP BY CustomerId HAVING COUNT(DISTINCT strftime('%Y', InvoiceDate)) = (SELECT COUNT(DISTINCT strftime('%Y', InvoiceDate)) FROM invoice))"
  },
  {
    "id": 17,
    "user_input": "What is the number of customers who have purchased tracks from all genres?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "```sql\nSELECT COUNT(DISTINCT c.CustomerId)\nFROM Customer c\nJOIN Invoice i ON c.CustomerId = i.CustomerId\nJOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId\nJOIN Track t ON il.TrackId = t.TrackId\nJOIN Genre g ON t.GenreId = g.GenreId\nWHERE c.CustomerId IN (\n  SELECT c.CustomerId\n  FROM Customer c\n  JOIN Invoice i ON c.CustomerId = i.CustomerId\n  JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId\n  JOIN Track t ON il.TrackId = t.TrackId\n  JOIN Genre g ON t.GenreId = g.GenreId\n  GROUP BY c.CustomerId\n  HAVING COUNT(DISTINCT g.Name) = (SELECT COUNT(*) FROM Genre)\n)\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT CustomerId FROM invoice i JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId JOIN track t ON il.TrackId = t.TrackId GROUP BY i.CustomerId HAVING COUNT(DISTINCT t.GenreId) = (SELECT COUNT(*) FROM genre))"
  },
  {
    "id": 18,
    "user_input": "How many albums have all their tracks in a single genre?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))"
    ],
    "response": "```sql\nSELECT COUNT(DISTINCT T1.AlbumId)\nFROM (\n  SELECT AlbumId, GenreId, COUNT(DISTINCT GenreId) AS num_genres\n  FROM Track\n  GROUP BY AlbumId, GenreId\n) T1\nJOIN (\n  SELECT AlbumId, COUNT(DISTINCT GenreId) AS num_genres\n  FROM Track\n  GROUP BY AlbumId\n) T2 ON T1.AlbumId = T2.AlbumId\nWHERE T2.num_genres = 1\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT AlbumId FROM track GROUP BY AlbumId HAVING COUNT(DISTINCT GenreId) = 1)"
  },
  {
    "id": 19,
    "user_input": "What is the number of customers who have spent more in 2011 than in 2010?",
    "retrieved_contexts": [
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))"
    ],
    "response": "```sql\nSELECT COUNT(*) \nFROM (\n  SELECT CustomerId\n  FROM Invoice\n  WHERE InvoiceDate BETWEEN '2010-01-01' AND '2010-12-31'\n  GROUP BY CustomerId\n) AS t2010\nJOIN (\n  SELECT CustomerId, SUM(Total) AS total2011\n  FROM Invoice\n  WHERE InvoiceDate BETWEEN '2011-01-01' AND '2011-12-31'\n  GROUP BY CustomerId\n) AS t2011\nON t2010.CustomerId = t2011.CustomerId\nJOIN (\n  SELECT CustomerId, SUM(Total) AS total2010\n  FROM Invoice\n  WHERE InvoiceDate BETWEEN '2010-01-01' AND '2010-12-31'\n  GROUP BY CustomerId\n) AS t2010_total\nON t2010.CustomerId = t2010_total.CustomerId\nWHERE t2011.total2011 > t2010_total.total2010;\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT CustomerId FROM (SELECT CustomerId, strftime('%Y', InvoiceDate) as year, SUM(total) as yearly_total FROM invoice WHERE strftime('%Y', InvoiceDate) IN ('2010', '2011') GROUP BY CustomerId, year) pivot GROUP BY CustomerId HAVING MAX(CASE WHEN year = '2011' THEN yearly_total ELSE 0 END) > MAX(CASE WHEN year = '2010' THEN yearly_total ELSE 0 END))"
  },
  {
    "id": 20,
    "user_input": "How many tracks appear in more playlists than the average track?",
    "retrieved_contexts": [
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)"
    ],
    "response": "```sql\nSELECT COUNT(TrackId)\nFROM (\n  SELECT TrackId, COUNT(PlaylistId) AS num_playlists\n  FROM PlaylistTrack\n  GROUP BY TrackId\n  HAVING COUNT(PlaylistId) > (SELECT AVG(num_playlists) \n                                FROM (SELECT TrackId, COUNT(PlaylistId) AS num_playlists \n                                      FROM PlaylistTrack \n                                      GROUP BY TrackId) AS subquery)\n) AS subquery;\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT TrackId FROM PlaylistTrack GROUP BY TrackId HAVING COUNT(*) > (SELECT AVG(playlist_count) FROM (SELECT COUNT(*) as playlist_count FROM PlaylistTrack GROUP BY TrackId)))"
  },
  {
    "id": 21,
    "user_input": "What is the number of artists who have tracks in more genres than the average artist?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))"
    ],
    "response": "```sql\nWITH ArtistGenreCount AS (\n  SELECT A.ArtistId, COUNT(DISTINCT T.GenreId) AS GenreCount\n  FROM Artist A\n  JOIN Album AL ON A.ArtistId = AL.ArtistId\n  JOIN Track T ON AL.AlbumId = T.AlbumId\n  GROUP BY A.ArtistId\n),\nAverageGenreCount AS (\n  SELECT AVG(GenreCount) AS AverageCount\n  FROM ArtistGenreCount\n)\nSELECT COUNT(*)\nFROM ArtistGenreCount\nWHERE GenreCount > (SELECT AverageCount FROM AverageGenreCount);\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT ArtistId FROM album a JOIN track t ON a.AlbumId = t.AlbumId GROUP BY ArtistId HAVING COUNT(DISTINCT GenreId) > (SELECT AVG(genre_count) FROM (SELECT COUNT(DISTINCT GenreId) as genre_count FROM album a JOIN track t ON a.AlbumId = t.AlbumId GROUP BY a.ArtistId)))"
  },
  {
    "id": 22,
    "user_input": "What is the total number of 'Rock' tracks that are longer than the average 'Jazz' track?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))"
    ],
    "response": "```sql\nSELECT COUNT(T1.TrackId)\nFROM Track AS T1\nJOIN Genre AS T2 ON T1.GenreId = T2.GenreId\nWHERE T2.Name = 'Rock'\nAND T1.Milliseconds > (SELECT AVG(Milliseconds) FROM Track AS T3 JOIN Genre AS T4 ON T3.GenreId = T4.GenreId WHERE T4.Name = 'Jazz')\n```",
    "reference": "SELECT COUNT(*) FROM track t JOIN genre g ON t.GenreId = g.GenreId WHERE g.name = 'Rock' AND t.milliseconds > (SELECT AVG(milliseconds) FROM track t JOIN genre g ON t.GenreId = g.GenreId WHERE g.name = 'Jazz')"
  },
  {
    "id": 23,
    "user_input": "What is the number of tracks that have a longer duration than the average duration of tracks in their genre?",
    "retrieved_contexts": [
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)",
      "Table: Genre\n\n  - GenreId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))"
    ],
    "response": "```sql\nSELECT COUNT(T1.TrackId)\nFROM Track T1\nJOIN (\n  SELECT GenreId, AVG(Milliseconds) as avg_duration\n  FROM Track\n  GROUP BY GenreId\n) T2\nON T1.GenreId = T2.GenreId\nWHERE T1.Milliseconds > T2.avg_duration\n```",
    "reference": "SELECT COUNT(*) FROM track t WHERE milliseconds > (SELECT AVG(milliseconds) FROM track t2 WHERE t2.GenreId = t.GenreId)"
  },
  {
    "id": 24,
    "user_input": "How many employees have sold to customers from all countries represented in the customer base?",
    "retrieved_contexts": [
      "Table: Customer\n\n  - CustomerId (INTEGER)\n  - FirstName (NVARCHAR(40))\n  - LastName (NVARCHAR(20))\n  - Company (NVARCHAR(80))\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))\n  - SupportRepId (INTEGER)",
      "Table: Employee\n\n  - EmployeeId (INTEGER)\n  - LastName (NVARCHAR(20))\n  - FirstName (NVARCHAR(20))\n  - Title (NVARCHAR(30))\n  - ReportsTo (INTEGER)\n  - BirthDate (DATETIME)\n  - HireDate (DATETIME)\n  - Address (NVARCHAR(70))\n  - City (NVARCHAR(40))\n  - State (NVARCHAR(40))\n  - Country (NVARCHAR(40))\n  - PostalCode (NVARCHAR(10))\n  - Phone (NVARCHAR(24))\n  - Fax (NVARCHAR(24))\n  - Email (NVARCHAR(60))",
      "Table: Invoice\n\n  - InvoiceId (INTEGER)\n  - CustomerId (INTEGER)\n  - InvoiceDate (DATETIME)\n  - BillingAddress (NVARCHAR(70))\n  - BillingCity (NVARCHAR(40))\n  - BillingState (NVARCHAR(40))\n  - BillingCountry (NVARCHAR(40))\n  - BillingPostalCode (NVARCHAR(10))\n  - Total (NUMERIC(10,2))",
      "Table: InvoiceLine\n\n  - InvoiceLineId (INTEGER)\n  - InvoiceId (INTEGER)\n  - TrackId (INTEGER)\n  - UnitPrice (NUMERIC(10,2))\n  - Quantity (INTEGER)",
      "Table: Track\n\n  - TrackId (INTEGER)\n  - Name (NVARCHAR(200))\n  - AlbumId (INTEGER)\n  - MediaTypeId (INTEGER)\n  - GenreId (INTEGER)\n  - Composer (NVARCHAR(220))\n  - Milliseconds (INTEGER)\n  - Bytes (INTEGER)\n  - UnitPrice (NUMERIC(10,2))",
      "Table: Album\n\n  - AlbumId (INTEGER)\n  - Title (NVARCHAR(160))\n  - ArtistId (INTEGER)",
      "Table: Artist\n\n  - ArtistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: MediaType\n\n  - MediaTypeId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: Playlist\n\n  - PlaylistId (INTEGER)\n  - Name (NVARCHAR(120))",
      "Table: PlaylistTrack\n\n  - PlaylistId (INTEGER)\n  - TrackId (INTEGER)"
    ],
    "response": "```sql\nSELECT COUNT(DISTINCT E.EmployeeId)\nFROM Employee E\nJOIN Customer C ON E.EmployeeId = C.SupportRepId\n```",
    "reference": "SELECT COUNT(*) FROM (SELECT e.EmployeeId FROM employee e JOIN customer c ON e.EmployeeId = c.SupportRepId GROUP BY e.EmployeeId HAVING COUNT(DISTINCT c.country) = (SELECT COUNT(DISTINCT country) FROM customer))"
  }
]